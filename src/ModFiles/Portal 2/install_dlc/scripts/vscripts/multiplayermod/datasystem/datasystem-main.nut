//---------------------------------------------------
//         *****!Do not edit this file!*****
//---------------------------------------------------
//   ______      _
//   |  _  \    | |
//   | | | |__ _| |_ __ _
//   | | | / _` | __/ _` |
//   | |/ / (_| | || (_| |
//   |___/ \__,_|\__\__,_|
//    _____           _
//   /  ___|         | |                _
//   \ `--. _   _ ___| |_ ___ _ __ ___ (_)
//    `--. \ | | / __| __/ _ \ '_ ` _ \
//   /\__/ / |_| \__ \ ||  __/ | | | | |_
//   \____/ \__, |___/\__\___|_| |_| |_(_)
//           __/ |
//          |___/
//---------------------------------------------------
// Purpose:
// Creates the functionality of our custom data
// system for maps that support it.
// Will not be avaliable for maps that don't use it.
// THIS SCRIPT IS STILL A WIP, ISSUES MIGHT OCCUR!
//---------------------------------------------------
//
// Data Systen Terminology:
// Enabled: The data system has started successfully on the python scripts end
// Disabled: The data system didn't start successfully on the python scripts end
// Running: By default the data system is set to run with every play session
// Not Running: The user has defined they do not want the data system to run next play session or the system is disabled

function dataLoad() {

}

function onSave(event) { // Triggers when a map calls for a certain event to be datad
    EntFire("p2mm_servercommand", "command", "_record SAVE/" + GetMapName().tostring + "-" + event + "-data")
    EntFire("p2mm_servercommand", "command", "stop")
    try {
        IncludeScript("multiplayermod/datasystem/" + GetMapName().tostring + "-" + event + "-data.nut")
        printlP2MM(GetMapName().tostring + "-" + event + "-data.dem has been created")
        SendChatMessage("Map progress datad....")
        EntFire("p2mm_servercommand", "command", "_record SAVE/datasystemcheck-mapdatad")
        EntFire("p2mm_servercommand", "command", "stop")
    } catch (e){
        SendChatMessage("Map failed to data, check console...")
        printlP2MM("Save system check failed to complete...")
        printlP2MM(e)
    }
}

/*
    Init for our data system
    We must check to make sure the python data system script is active or it won't work
    If it fails we'll tell mapspawn.nut that datas aren't currently supported
*/
function init() {
    printlP2MM("Starting the custom data system!")
    //Makes a temporary .dem file for our python data system to check
    EntFire("p2mm_servercommand", "command", "_record SAVE/datasystemcheck-test")
    EntFire("p2mm_servercommand", "command", "stop")

    try {
        IncludeScript("multiplayermod/datasystem/datasystemcheck-pythonsuccess.nut")
        printlP2MM("Data Systen works! Will be avaliable for the map...")
        dataCheck <- true
        EntFire("p2mm_servercommand", "command", "_record SAVE/datasystemcheck-nutsuccess")
        EntFire("p2mm_servercommand", "command", "stop")
    } catch (e){
        printlP2MM("First check detection failed, trying again...")
        printlP2MM(e)
        local datasystemcheckerrors = 0
        while (datasystemcheckerrors != 3) {
            try {
                IncludeScript("multiplayermod/datasystem/datasystem-pythonsuccess.nut")
                break
            } catch (e){
                printlP2MM("Check detection failed, will try again...")
                printlP2MM(e)
                datasystemcheckerrors += 1
            }
        }

        if (datasystemcheckerrors = 3) {
            printlP2MM("Data Systen check detection failed after checking three times!")
            printlP2MM("The data system will not be avaliable for this map...")
            dataCheck <- false
            EntFire("p2mm_servercommand", "command", "_record SAVE/datasystemcheck-nutfail")
            EntFire("p2mm_servercommand", "command", "stop")
            datasystemcheckerrors = 0
        } else {
            printlP2MM("Data System works! Will be avaliable for the map...")
            dataCheck <- true
            EntFire("p2mm_servercommand", "command", "_record SAVE/datasystemcheck-nutsuccess")
            EntFire("p2mm_servercommand", "command", "stop")
            datasystemcheckerrors = 0
        }
    }
}